generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

type AccountApplications {
  /// Multiple data types found: String: 50%, String (ObjectId): 50% out of 4 sampled entries
  application Json
  /// Multiple data types found: Array(String): 50%, Array(String (ObjectId)): 50% out of 4 sampled entries
  groups      Json
  status      String
}

type AccountCode {
  allin      Int
  btg        Int
  /// Multiple data types found: String: 16.7%, Int: 83.3% out of 6 sampled entries
  customerId Json
  masterId   String?
  transid    Int
}

type AccountCredentials {
  push AccountCredentialsPush
  sms  AccountCredentialsSms
}

type AccountCredentialsPush {
  android AccountCredentialsPushAndroid
  ios     AccountCredentialsPushIos
  iosTEST AccountCredentialsPushIosTest
}

type AccountCredentialsPushAndroid {
  key       String
  provider  String
  structure String
}

type AccountCredentialsPushIos {
  bundleId   String
  key        String
  password   String
  production Boolean
  provider   String
  structure  String
}

type AccountCredentialsPushIosTest {
  key       String
  provider  String
  structure String
}

type AccountCredentialsSms {
  password String
  provider String
  username String
}

type AccountDomains {
  click   String
  full    String
  optout  String
  preview String
  short   String
  view    String
}

type AccountGuests {
  applications AccountGuestsApplications[]
  /// Multiple data types found: String: 50%, String (ObjectId): 50% out of 2 sampled entries
  user         Json
}

type AccountGuestsApplications {
  /// Multiple data types found: String: 50%, String (ObjectId): 50% out of 2 sampled entries
  application Json
  /// Multiple data types found: Array(String): 50%, Array(String (ObjectId)): 50% out of 2 sampled entries
  groups      Json
}

type GroupEntities {
  id     String?  @map("_id") @db.ObjectId
  entity String   @db.ObjectId
  events String[] @db.ObjectId
}

model Account {
  id           String                @id @default(auto()) @map("_id") @db.ObjectId
  applications AccountApplications[]
  code         AccountCode
  createdAt    DateTime?             @db.Date
  credentials  AccountCredentials?
  domains      AccountDomains?
  email        String?
  guests       AccountGuests[]
  name         String
  owner        String                @db.ObjectId
  updatedAt    DateTime?             @db.Date
}

model Application {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  callback  String
  listable  Boolean
  name      String
  redirect  String
  status    String
  updatedAt DateTime @db.Date
}

model Entity {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime? @db.Date
  name      String    @unique(map: "name_1")
  updatedAt DateTime? @db.Date
}

model Event {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @db.Date
  name      String   @unique(map: "name_1")
  updatedAt DateTime @db.Date
}

model Group {
  id        String          @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime?       @db.Date
  entities  GroupEntities[]
  name      String          @unique(map: "name_1")
  updatedAt DateTime?       @db.Date
  user      User?           @relation(fields: [userId], references: [id])
  userId    String?         @db.ObjectId
}

model User {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  /// Multiple data types found: Float: 12.5%, Int: 87.5% out of 8 sampled entries
  avatar      String?
  company     String?
  createdAt   DateTime? @db.Date
  description String?
  email       String?
  groups      Group[]
  isActive    Boolean?
  isAdmin     Boolean?
  isClient    Boolean?
  name        String?
  password    String?
  phone       String?
  updatedAt   DateTime? @db.Date
  username    String?
}
